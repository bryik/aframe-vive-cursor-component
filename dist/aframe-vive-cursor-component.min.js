!function(e){function t(n){if(i[n])return i[n].exports;var s=i[n]={exports:{},id:n,loaded:!1};return e[n].call(s.exports,s,s.exports,t),s.loaded=!0,s.exports}var i={};return t.m=e,t.c=i,t.p="",t(0)}([function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");var i={CLICK:"click",MOUSEENTER:"mouseenter",MOUSEDOWN:"mousedown",MOUSELEAVE:"mouseleave",MOUSEUP:"mouseup"},n={HOVERING:"cursor-hovering",HOVERED:"cursor-hovered"};AFRAME.registerComponent("vive-cursor",{dependencies:["raycaster"],schema:{color:{type:"color",default:255},radius:{type:"number",default:"0.001"},objects:{type:"string",default:""}},multiple:!1,init:function(){var e=this.el,t=this.data,i=e.sceneEl.canvas;if(this.mouseDownEl=null,this.intersectedEl=null,this.intersection=null,!i)return void e.sceneEl.addEventListener("render-target-loaded",this.init.bind(this));var n=new THREE.CylinderGeometry(t.radius,t.radius,1e3,32),s=new THREE.MeshBasicMaterial({color:t.color}),r=new THREE.Mesh(n,s);r.position.z=-500,r.rotation.x=90*(Math.PI/180),this.el.setObject3D("vive-cursor-mesh",r);var o="near: 0.03; objects: "+t.objects;e.setAttribute("raycaster",o),this.onIntersectionBind=this.onIntersection.bind(this),this.onIntersectionClearedBind=this.onIntersectionCleared.bind(this),this.onMouseDownBind=this.onMouseDown.bind(this),this.onMouseUpBind=this.onMouseUp.bind(this)},attachEventListeners:function(){var e=this.el;e.addEventListener("raycaster-intersection",this.onIntersectionBind),e.addEventListener("raycaster-intersection-cleared",this.onIntersectionClearedBind),e.addEventListener("triggerdown",this.onMouseDownBind),e.addEventListener("triggerup",this.onMouseUpBind)},removeEventListeners:function(){var e=this.el;e.removeEventListener("raycaster-intersection",this.onIntersectionBind),e.removeEventListener("raycaster-intersection-cleared",this.onIntersectionClearedBind),e.removeEventListener("triggerdown",this.onMouseDownBind),e.removeEventListener("triggerup",this.onMouseUpBind)},onMouseDown:function(){this.twoWayEmit(i.MOUSEDOWN),this.mouseDownEl=this.intersectedEl},onMouseUp:function(){this.twoWayEmit(i.MOUSEUP),this.intersectedEl&&this.mouseDownEl===this.intersectedEl&&this.twoWayEmit(i.CLICK)},onIntersection:function(e){var t,s,r=this,o=this.el,a=e.detail.els[0];if(s=e.detail.els[0]===o?1:0,t=e.detail.intersections[s],a=e.detail.els[s]){if(this.intersectedEl===a)return void(this.intersection=t);this.intersectedEl&&this.clearCurrentIntersection(),this.intersection=t,this.intersectedEl=a,o.addState(n.HOVERING),a.addState(n.HOVERED),r.twoWayEmit(i.MOUSEENTER)}},onIntersectionCleared:function(e){var t=this.el,i=e.detail.el;t!==i&&i===this.intersectedEl&&this.clearCurrentIntersection()},clearCurrentIntersection:function(){var e=this.el;this.intersectedEl.removeState(n.HOVERED),e.removeState(n.HOVERING),this.twoWayEmit(i.MOUSELEAVE),this.intersection=null,this.intersectedEl=null},twoWayEmit:function(e){var t=this.el,i=this.intersectedEl,n=this.intersection;t.emit(e,{intersectedEl:i,intersection:n}),i&&i.emit(e,{cursorEl:t,intersection:n})},remove:function(){var e=this.el;e.removeObject3D("vive-cursor-mesh"),this.removeEventListeners(),e.removeAttribute("raycaster")},pause:function(){this.removeEventListeners()},play:function(){this.attachEventListeners()}})}]);